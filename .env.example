# =============================================================================
# NanoAPIClient Environment Configuration
# =============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control - it contains sensitive information!

# =============================================================================
# API KEYS (REQUIRED)
# =============================================================================

# Google Gemini API Key - Required for image generation
# Get your API key from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# GOOGLE CLOUD PLATFORM CONFIGURATION
# =============================================================================

# GCP Project ID - Your Google Cloud project identifier
# Example: my-project-id-12345
GCP_PROJECT_ID=your_gcp_project_id

# GCP Location/Region - Google Cloud region for Vertex AI services
# Common values: us-central1, us-east1, eu-west1, asia-southeast1
GCP_LOCATION=us-central1

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Storage Type - Where to save generated images
# Values: local (filesystem) or s3 (AWS S3)
STORAGE_TYPE=local

# =============================================================================
# AWS S3 CONFIGURATION (Required only if STORAGE_TYPE=s3)
# =============================================================================

# AWS S3 Bucket Name - Must be globally unique
# Example: my-nano-api-images-bucket
AWS_S3_BUCKET=your_s3_bucket_name

# AWS S3 Region - Region where your bucket is located
# Example: us-east-1, eu-central-1, ap-southeast-1
AWS_S3_REGION=us-east-1

# AWS Credentials - Choose ONE of the following methods:

# Method 1: Direct credentials (not recommended for production)
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key

# Method 2: AWS Profile (recommended)
# Configure with: aws configure --profile your-profile-name
# AWS_PROFILE=your_aws_profile_name

# Method 3: IAM roles (for EC2/Lambda deployment)
# No additional configuration needed if running on AWS with proper IAM roles

# =============================================================================
# FLASK WEB SERVER CONFIGURATION
# =============================================================================

# Flask Debug Mode - Enable debug mode for development (NEVER in production!)
# Values: true, false, 1, 0, yes, no
FLASK_DEBUG=false

# Upload Folder - Directory for temporary file uploads
# Default: uploads
UPLOAD_FOLDER=uploads

# Default Output Directory - Where images are saved when no output_dir specified
# Default: . (current directory)
DEFAULT_OUTPUT_DIR=.

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example 1: Local development with filesystem storage
# STORAGE_TYPE=local
# GEMINI_API_KEY=AIza...your_key_here
# GCP_PROJECT_ID=my-dev-project
# GCP_LOCATION=us-central1
# FLASK_DEBUG=true

# Example 2: Production with S3 storage
# STORAGE_TYPE=s3
# AWS_S3_BUCKET=my-production-images-bucket
# AWS_S3_REGION=us-east-1
# AWS_PROFILE=production
# GEMINI_API_KEY=AIza...your_key_here
# GCP_PROJECT_ID=my-prod-project
# GCP_LOCATION=us-central1
# FLASK_DEBUG=false

# =============================================================================
# NOTES
# =============================================================================

# 1. Environment variables set in your shell will override values in this file
# 2. Required variables: GEMINI_API_KEY
# 3. For S3 storage, you also need: AWS_S3_BUCKET, AWS_S3_REGION, and AWS credentials
# 4. All paths can be absolute or relative to the project root
# 5. Boolean values are case-insensitive (true/True/TRUE all work)